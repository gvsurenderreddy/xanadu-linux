	refracta2usb version: 9.0.5
	
	refracta2usb allows you to create a live-USB system on a thumb drive
	using a live-CD iso file or directly from a running live system. It also
	allows you to replace the system on an existing live-USB drive with a
	system from another iso file, so you can easily update your live system
	with your latest snapshot.
	
	There are advanced options for creating and using persistent partitions
	or files, with or without encryption, read-write media, and probably more
	by the time you read this.
	
	Think of this program as a Swiss army knife - it's a collection of 
	tools, some of which you may need, some you may never use, and some
	whose uses are mutually exclusive. The main menu is not a sequential 
	list of tasks, although it may appear that way.
	
	To start refracta2usb, select it from the Applications menu, under System,
	or start it from a terminal as unprivileged user with the command:
		refracta2usb

	Note: Some tasks require root privileges, and you will be asked for 
	the password when you run those tasks.


	___________________

	___ QUICK START ___
	
	Plug in usb thumb drive; do not open or mount it.
	Start refracta2usb and select the device you want to use.
	
	
	
	FOR A NEW THUMB DRIVE
	
	At the Main Menu:
	
	  Options: 
	    Check "Write syslinux/mbr.bin to Master Boot Record."	
	    
	  Format the stick:
		First partition, fat32, boot flag on. Label is optional.
		Second partition is optional. For standard debian-live persistence,
		the label must be "persistence" and format ext2 (or ext3,4).
	
	  Create Live-USB:
	    Either from ISO image or from the running Live session.
		This will copy the live system to the first partition.
		
	  Persistent (Optional)
	    Choose this if you want standard debian-live persistence in
	    the second partition. (Allows you to save files that will still
	    be there after a reboot.)
	
	
	Done.
	

	
	IF YOUR THUMB DRIVE ALREADY HAS A BOOTLOADER
	
	Same as above, but don't select the option to write to MBR.
	  

	
	TO UPDATE A PREPARED DRIVE WITH A NEWER ISO IMAGE
	
	At the Main Menu:
	
	  Options:
	    You might want to preserve your syslinux folder if you have
	    customized the boot menu.
	    
	  Update:
		Choose the /live folder you want to replace. (Note: for a multi-boot 
		or custom-named system, choose the folder that contains the files 
		for that system. (vmlinuz, initrd and squash file)
		
		Then choose the iso file you want to use to replace the old
		live system.
		
	  Done.

	Warning: If you update a system that uses full persistence, you may
	need to delete some or all of the system files on the persistent
	filesystem, depending on how different the updated iso is from the
	one it is replacing.


	________________________________

	___ EXPLANATION OF PERSISTENCE ___
	
	A live-CD or live-USB normally runs with a read-only filesystem. In
	order to have an area with read-write permissions for saving file,
	a feature called persistence can be enabled. There are two basic
	kinds of persistence - persistent /home, which allows a user to save
	files and desktop configurations in their own home directory, and
	full persistence, which allows saving system files in addition to
	home files. 
	
	The choice of full or home persistence is determined by	the contents
	of the config file, persistence.conf, which gets placed in the root
	of the persistent filesystem. That filesystem may be contained in
	a separate partition from the system, or it may be in a
	loopback file. In either case, any saved files are kept on the
	persistent filesystem, and the system knows to use the files it finds
	there. Note that with full persistence, the read-only filesystem
	is not changed, but the system knows to use any files it finds on the
	persistent filesystem, such as altered config files or added programs.
		
	Refracta2USB provides several different ways of setting up persistence.
	The simplest case is to have a second partition for saving files. This
	can be set up from the Main Menu in Refracta2USB. Other methods are
	available in the Advanced Menu. 
	
	If encryption is desired for the persistent partition, you can run 
	mkusbcrypt, which uses custom hooks that will mount the encrypted
	partition at boot. Note that only home persistence is available this
	way. Another option would be to use a loopback file to hold the
	persistent filesystem.
	
	Loopback files can be encrypted or not. If you use encryption with a
	loopback file, you must use a patched initrd. Future versions of
	refracta2usb will allow using an encrypted partition without adding
	custom hooks and will allow using an encrypted loopback file without
	needing to patch the initrd, provided that future versions of
	live-boot will support these features.
	
	
	_______________________

	_____ BASIC TASKS _____     


	New thumb drive:
	
	Plug in usb thumb drive; do not open or mount it.
	Start refracta2usb and select the device you want to use.
	(If you start the program before you plug in the drive, you can Rescan.)
	
	At the Main Menu:
	
	1. Format the stick. First partition must be fat32 (vfat) with boot flag on.
	If the usb stick was formatted as fat32 to begin with, you can just mark
	it bootable and optionally give it a label (recommended)
	
	If you want a partition that's writable for saving files, you should 
	resize the fat32 partition to make room for the second partition. The
	recommended filesystem type for the second partition is ext2. For
	standard debian-live persistence, the label should be "persistence",
	however this program will automatically use any valid label you give
	the filesystem.	(See #4 below.)
	
	2. Go to Options and check the box for "Write syslinux/mbr.bin to Master
	Boot Record." Press Continue to return to the main menu.
	
	3. Choose ISO to copy files from a live-CD iso file or if you're running a
	live-CD or live-USB, you can choose Live to copy files from the running
	live system.
	
	Note: If you repeat this procedure with a different iso, you probably
	won't need to write to the mbr again.

	
	4. Persistent (Optional - for standard debian-live persistence)
	This will prepare another partition that will allow you to save files
	during a live session. (Encryption is not currently possible with 
	this method. See Advanced Tasks for ways of encrypting your data.)
	
	You can create the second partition now if you didn't already do it.
	Use a linux filesystem format give the filesystem a label. The standard
	method is to label it "persistence" so that the live system can use
	it when you boot with the "persistence" boot option. 
	
	If the partition you choose for persistence has a different label, the
	program will detect that and will place an entry in your boot menu for
	using this partition with the option
	
					persistence-label=LABEL
	
	The disk label will also be used in the menu label.
	
	After closing or bypassing gparted, choose the partition you want to
	use. It will probably be the second partition on the selected device.
	
	Setting persistence for /home will allow you to save files in
	your home directory. Full persistence will allow you to save both
	system files and home files. You can choose to edit persistence.conf
	yourself if you want different options.
	
	Other, non-standard methods for read/write access to a partition
	are available in the advanced options. 
	
	
	
	Updating a thumb drive with a new image:
	
	Plug in the usb thumb drive; do not open or mount it.
	Start refracta2usb and select the device you want to use.
	At the main menu, select Update. 
	
	Select the directory that contains the live image you want to replace. 
	The default is /live in the root of the usb device. For a single-boot 
	live-usb device, that's probably correct, and you can just click OK. 
	
	For a multi-boot or custom named system, choose the directory that 
	contains the files for that system. (vmlinuz, initrd and squash file)
	
	Choose the iso file you want to use.
	
	Note: If you previously customized the syslinux boot menu on your stick,
	and you want to keep that menu instead of using the one that's on the
	new iso file, go to Options and check the box for "Preserve an existing
	syslinux folder" BEFORE you run the Update.
	
	Note2: You can't use this function to replace an intact iso file.

	
	
	Important Note
	If Your Thumb Drive Was Previously Imaged With Isohybrid Image
	    using dd, cat or rawrite command:
	
	Zero the first 2MB of the drive before running refracta2usb
		dd if=/dev/zero of=/dev/sdX bs=512 count=4096
		
		where sdX is replaced with the correct device name for your usb.
		TAKE CARE TO ZERO THE CORRECT DRIVE OR YOU MAY LOSE ALL DATA!!! 
	
	Run refracta2usb. Format the drive. You'll need to create a new
	partition table before you can make partitions. Follow directions
	for a New thumb drive. (see #1)
	
	You may need to repeat this procedure, and you may need to zero more
	than 4096 blocks.
	
	You also may need to reinstall the syslinux bootloader, and just in
	case that doesn't work, you could install the alternate bootloader.
	
	______________________
	
	___ SETUP OPTIONS ___
	
	
	- Add hooks for encrypted /home.
	
	This adds a folder that contains hooks to have an encrypted /home
	with the version of live-boot that's in wheezy (3.0.1-1) and currently
	still in jessie/sid. Adding this folder won't do anything unless you
	use it. (i.e. Create and use an encrypted /home.) (Default: TRUE)
	
	
	- Preserve an existing hooks folder.
	
	This only works on updates. It will save the current hooks folder on
	your usb drive, in case you've added some hooks of your own.  
	(Default: TRUE)
	
	
	- Preserve an existing /boot/grub folder.
	
	This only works on updates and will only works if you hacked your usb
	drive to boot with grub. Otherwise, it does nothing. (Default: TRUE)
	
	
	- Preserve an existing syslinux filder.
	
	This only works when updating and when creating a live-USB from a 
	running live system. If you've customized your boot menu and
	want to keep it, check this option. It will prevent the script from
	replacing the syslinux folder with the isolinux folder from the CD
	image file. The isolinux folder will be saved, in case you need to
	refer to it for special boot options that came with the CD image 
	file. (Default: FALSE)
	
	
	- Copy the default refracta2usb syslinux folder.
	
	This has a couple of entries on the boot menu that are different from
	what's on the live-CD image. The isolinux folder from the CD image file
	will be saved. (Default: FALSE)


	- Write syslinux/mbr.bin to Master Boot Record.
	
	This needs to be checked the first time you turn an ordinary thumb
	drive into a bootable live-USB. You'll also need it if you're using
	a thumb drive that had another bootloader on it, or if you zeroed (wiped)
	the beginning of the drive. (Default: FALSE)
	
	Note: If you want to change any of the default settings for the 
	above options, you can change them in /usr/lib/refracta2usb/functions_r2u.
	Other settings can be found in /etc/refracta2usb.conf, but you probably
	won't need to change any of them.
	
	
	______________________

	___ ADVANCED TASKS ___

	- Bootloader: (Re)install syslinux to partition and to mbr.
	
	This will (re)install syslinux to the first partition and the Master
	Boot Record and do nothing else. With luck, you'll never need to use
	this option.
	

	- Alternate_mbr: Alternate bootloader (install-mbr)
	
	This will run 'install-mbr' on the selected drive. Useful if the
	syslinux bootloader won't work for you. When you reboot with this,
	you may be presented with a prompt of 'MBR 1FA'. Type the number "1"
	to boot. (If so, check partition for boot flag.)
	

	- Encrypted: Create an encrypted persistent /home. (mkusbcrypt)
	
	This runs mkusbcrypt and will use custom hooks to create an
	encrypted persistent /home partition. It will copy /home from
	either the running live system or from a selected iso file to the
	encrypted filesystem. If the user chooses to copy /home from the
	running live system, any items listed in the excludes list will
	not be copied. (default: /usr/lib/refracta2usb/r2u_excludes.list)
	You can edit this file to suit your needs.
		
	This function will be removed as newer versions of live-boot in 
	jessie/sid should support encrypted partitions. Also see below for
	using an encrypted loopback file for persistence.
	
	
	- Add_LUKS: Edit boot menu and add lukshome uuid. 
	
	For use after running mkusbcrypt. This will add the uuid of the 
	encrypted partition to the boot menu and let you edit the menu. 
	The alternative is to edit the boot command manually, every time you 
	want to boot with encrypted persistence.
	

	- Multiboot: Add iso contents for multiboot usb.
	
	Adds the contents of additional live iso files to a live-USB drive
	to allow booting into different systems. With loopfiles, you can 
	have separate persistent volumes for each system.
	
	Enter a name for the directory to contain the files from the live-CD
	image. Choose the CD image file. Review the boot menu entry in a
	text editor.


	- Boot_ISO: Add intact iso and use findiso boot option.
	
	This copies the entire iso file to a named directory and creates a
	menu entry that uses the findiso boot option. It keeps the iso file
	intact, which may be useful if you want to transfer the file to a 
	different location, or if you need to plug the stick into a running
	Windows system and burn the iso to a CD.
	
	Select the iso file to use. Enter a name to use for the folder to
	contain the iso and for the boot menu entry. Select the kernel and
	initrd to use (file-selection window opens in the mounted iso image
	to use the kernel and initrd from that iso.)
	
	Known bug: If you later add a patched initrd or loopback file to the
	named directory containing the iso file, you'll need to manually edit
	the boot menu entry when it opens in the text editor. See the sample 
	boot menu entries below.


	- Patch_initrd: Rebuild initrd for runtime read/write fat32. (patch-initrd-gui)

	Select the initrd to patch. You probably want the one that's already
	on a live-USB, so that's where the file-selection window opens. If
	you choose a different one, it's up to you to make sure that the
	matching kernel is present on the usb drive.
	
	This allows you to save or edit files in the root of the live media
	while it is running. You can use this to edit the boot menu and help
	files, or to save files on a fat32 partition that can be seen by
	Windows.

	
	- Loopback: Create loopback file. (mkloopback)
	
	You can create a loopback file to be used instead of a partition for
	data storage. This can be set up with or without persistence and 
	with or without encryption. 
	
	If you put the file on the FIRST PARTITION, or if you use ENCRYPTION,
	you will need to use a patched initrd and boot with the live media 
	in read/write mode. PATCH THE INITRD FIRST, THEN CREATE THE LOOPBACK
	FILE. That way, the boot menu entry will be generated correctly. 
 
	Default settings do not require a patched initrd.

	To change file sizes listed in the loopback settings window, edit 
	/etc/refracta2usb.conf. To change the default settings, edit
	/usr/lib/refracta2usb/functions_r2u. 


	- Mount_loop and Unmount_loop
	
	If you have loopfiles that aren't set for booting with persistence,
	you can mount/unmount them easily. Hint: If you have a multi-boot
	usb with separate loopfiles used for persistence with the different
	live systems on the disk, and you need access to files that are in
	the loopfile of a system other than the one that's currently running,
	you can run these to mount and unmount selected loopfiles.
	
	
	- Delete_loop
	
	Sometimes, unused loop devices may be left by Mount_loop, especially
	if the task is stopped before it finishes. This will find the leftover
	and loop devices and let you delete them. 
	
	You probably won't need to use this.
	

		
--------------------------
Sample persistence.conf:
--------------------------

/home   union,source=.

# Use this if you copied /home/* to the volume labeled "persistence".
#/home	bind,source=.

# Use this for full persistence (entire filesystem writable.)
#/ union,source=.


--------------------------
Sample boot menu entries:
--------------------------

# default Refracta boot 
label live
	menu label Refracta (default)
    kernel /live/vmlinuz quiet
    append initrd=/live/initrd.img boot=live ip=frommedia union=aufs config=openssh-server

# boot with standard debian-live style persistence
label persist
	menu label Refracta (persistent mode)
    kernel /live/vmlinuz quiet
    append initrd=/live/initrd.img boot=live ip=frommedia union=aufs persistence 

# boot with standard debian-live style persistence
# but with disk label other than "persistence"
label persist
	menu label Refracta (persistent mode)
    kernel /live/vmlinuz quiet
    append initrd=/live/initrd.img boot=live ip=frommedia union=aufs persistence persistence-label=LABE
 
# boot with refracta custom hooks for encrypted persistent /home partition
# edit luksome=<uuid or device name of physical partition>
label with_hooks
	menu label Refracta (use hooks)
    kernel /live/vmlinuz quiet
    append initrd=/live/initrd.img boot=live ip=frommedia union=aufs config=hooks hooks=file:///lib/live/mount/medium/live/hooks/hookscript lukshome=

# boot with patched initrd to allow editing of files in root of media
label rwmedia
	menu label Refracta (rw media))
    kernel /live/vmlinuz quiet
    append initrd=/live/initrd.custom.img boot=live ip=frommedia union=aufs basemountmode=rw,noatime,umask=000 

# multiboot with loopfile on a different partition
label loopten
	menu label Refracta (loopten)
    kernel /sid/live/vmlinuz quiet
    append initrd=/sid/live/initrd.img boot=live ip=frommedia union=aufs config=openssh-server  live-media-path=/sid/live persistence persistence-media=removable-usb persistence-path=/loopfiles/ persistence-label=loopten  

# multiboot with loopfile on same partition and in same folder, with patched initrd
label fakeloop2
	menu label Refracta (fakeloop2)
    kernel /fakesid/live/vmlinuz quiet
    append initrd=/fakesid/live/initrd.custom.img boot=live ip=frommedia union=aufs config=openssh-server basemountmode=rw,noatime,umask=000 live-media-path=/fakesid/live persistence persistence-media=removable-usb persistence-path=/fakesid/ persistence-label=fakeloop2 persistence-encryption=none,luks 

# blacklist nouveau
label nomodeset
	menu label Refracta (no modeset)
    kernel /live/vmlinuz quiet 
    append initrd=/live/initrd.img boot=live ip=frommedia union=aufs nomodeset nouveau.blacklist=1

### Boot_ISO bug:
# Adding a patched initrd or loopback file to a folder that uses an intact iso file to boot
# results in an incorrect menu entry. In the example below, the first entry is correct. It was
# created when the iso was first added to a folder named 'sid'. But the entries created for initrd.custom.img
# and persistence are missing the findiso option, and they have the wrong path for kernel, initrd
# and live-media-path.

    label sid
       menu label sid
        kernel /sid/vmlinuz quiet
        append initrd=/sid/initrd.img boot=live ip=frommedia union=aufs findiso=/sid/snapshot140102_1452.iso

    label initrd.custom.img
       menu label Refracta (initrd.custom.img)
        kernel /sdc1/live/vmlinuz quiet
        append initrd=/sdc1/live/initrd.custom.img boot=live ip=frommedia union=aufs config=openssh-server basemountmode=rw,noatime,umask=000 live-media-path=/sdc1/live

    label persistence
       menu label Refracta (persistence)
        kernel /sdc1/live/vmlinuz quiet
        append initrd=/sdc1/live/initrd.custom.img boot=live ip=frommedia union=aufs config=openssh-server basemountmode=rw,noatime,umask=000 live-media-path=/sdc1/live persistence persistence-media=removable-usb persistence-path=/sid/ persistence-encryption=none,luks


# Here are the corrected entries.
# /sdc1/live is replaced with the named folder /sid
# and the findiso option is added.

    label initrd.custom.img
       menu label sid (initrd.custom.img)
        kernel /sid/vmlinuz quiet
        append initrd=/sid/initrd.custom.img boot=live ip=frommedia union=aufs config=openssh-server basemountmode=rw,noatime,umask=000 findiso=/sid/snapshot140102_1452.iso

    label persistence
       menu label sid (persistence)
        kernel /sid/vmlinuz quiet
        append initrd=/sid/live/initrd.custom.img boot=live ip=frommedia union=aufs config=openssh-server basemountmode=rw,noatime,umask=000 findiso=/sid/snapshot140102_1452.iso persistence persistence-media=removable-usb persistence-path=/sid/ persistence-encryption=none,luks

