#!/usr/bin/env bash
# mkpersist 2014-02-21
TITLE="mkpersist"

if [[ $1 = "--debug" ]] ; then
	set -x
fi

username=$(cat /tmp/r2u_user)
error_log="/home/${username}/.refracta2usb/mkpersist.log"
touch "$error_log"
chown ${username}:${username} "$error_log"
exec 2>"$error_log"


configfile="/etc/refracta2usb.conf"
source "$configfile"
source /usr/lib/refracta2usb/functions_r2u
yad_zen_message="$TITLE requires yad or zenity to be installed,
and it must be started from refracta2usb."
yad_zenity_compat	



exit_dialog () {
	$DIALOG --info --window-icon=error --title="$TITLE" \
	--text="$TITLE will now exit due to error or user action
	$exit_message
	" \
	--${BUTTON0}="OK"${BUTTON0NUM}

	if [[ -n "$persist_dev" ]] ; then
		if $(grep -q $persist_dev /proc/mounts) ; then
			umount "$persist_dev"
		fi
	fi
	exit 1

}


partition_gui () {
    partitioner=$($DIALOG --list --title=Partitioning \
	--text=" You need to have a linux partition ready to create a persistent volume.
 If there isn't already a second partition on the usb drive, you can run 
 the partition editor now and create one. Recommended format is ext2." \
	--column "Option" --separator="" \
	--width=600 --height=300  \
	--${BUTTON0}="OK"${BUTTON0NUM} --${BUTTON1}="Quit Task"${BUTTON1NUM} \
"Run GParted partitioner now." \
"Run cfdisk partitioner in a terminal." \
"No thanks, I already have a partition prepared. Continue." \
"I'd like to quit this task now.") 

	if [[ $? = 1 ]] ; then
		exit 0
	fi

	if $(echo $partitioner | grep -q GParted) ; then
		gparted "$device"
	fi
	if $(echo $partitioner | grep -q cfdisk) ; then
		xterm  -fa mono -fs 12 -geometry 90x20+0+0 -hold -e cfdisk "$device"
		cfdisk "$device"
	fi
	
	if $(echo $partitioner | grep -q quit) ; then
		exit 0
	fi


# Only up to partition 9, or $persist_dev needs to be redefined.   -name "/dev/${DEVICE}[1-9]"
#	selection=$(find /dev -mindepth 1 -maxdepth 1  -name "/dev/${DEVICE}[1-9]" \

	selection=$(find /dev -mindepth 1 -maxdepth 1  -name "*[sh]d[a-z][1-9]" \
	| grep $device | sort | awk '{print "\n" $0 }' \
	| $DIALOG --list --title="Persistent Partition" --text="Select a partition to use for persistence." \
	--multiple --column ' ' --column 'Partitions' --height=380 --width=150 ${RADIOLIST} \
	--${BUTTON0}="OK"${BUTTON0NUM} --${BUTTON1}="Quit Task"${BUTTON1NUM})
		if [[ $? = 1 ]] ; then
			exit 0
		fi
	
	if [[ -z "$selection" ]] ; then
		exit_message=" No partition was chosen.  "
		exit_dialog
	fi
	
	persist_dev=$(echo $selection | tr -d \|)
	persist_label=$(/sbin/blkid -c /dev/null -s LABEL "$persist_dev" | awk -F"\"" '{ print $2 }')

	if [[ -z "$persist_label" ]] ; then
		exit_message=" The partition chosen for persistence must have a label.  "
		exit_dialog
	fi

	if [[ -f /tmp/persistence_label ]] ; then
		rm /tmp/persistence_label
	fi

	echo "$persist_label" > /tmp/persistence_label
#	username=$(cat /tmp/r2u_user)
	chown ${username}:${username} /tmp/persistence_label
}


sanity_checks () {
	[[ -b $persist_dev ]] || { exit_message="Selected partition $persist_dev does not exist!" ; exit_dialog ; }

	if $(df -h | grep $persist_dev) ; then
		exit_message="
		Error! $persist_dev is mounted.
		Are you sure you chose the right partition?
		Exiting... "
		exit_dialog
	fi

	temp_uuid=$(/sbin/blkid -s UUID | grep "$persist_dev" | awk '{ print $2 }' | sed 's/\"//g' | sed 's/UUID=//')
	if $(grep "$temp_uuid" /proc/mounts); then
		exit_message="
		Error! $persist_dev is mounted.
		Are you sure you chose the right partition?
		Exiting... "
		exit_dialog
	fi

	isfat=$(/sbin/blkid | grep "$persist_dev" | grep -i fat)
	if [[ -n $isfat ]] ; then
		exit_message="
		Error! $persist_dev is FAT.
		Are you sure you chose the right partition?
		Exiting... "
		exit_dialog
	fi
	
		if [[ -z "$persist_label" ]] ; then
		exit_message="No label found on the selected partition."
		exit_dialog
	fi
	
}


prepare_config () {
	
PERSISTENCE_TYPE=$($DIALOG --list --radiolist --column ' ' --column '' --width 260 --height 190 \
	FALSE "Persistent home" \
	FALSE "Full persistence" \
	FALSE "Let me edit persistence.conf")

	if [[ PERSISTENCE_TYPE =~ home ]] ; then
		PERSISTENCE="yes"
		PERSISTENCE_TYPE="home"
	fi
	
	if [[ PERSISTENCE_TYPE =~ full ]] ; then
		PERSISTENCE="yes"
		PERSISTENCE_TYPE="full"
	fi

	if [[ PERSISTENCE_TYPE =~ conf ]] ; then
		PERSISTENCE="yes"
		PERSISTENCE_TYPE="config"
	fi

# or maybe persist_fs_mountpoint
persist_dev_mountpoint="/tmp/persist_dev" ##### put in configfile for mkloopback and mkpersist
if ! [[ -d "$persist_dev_mountpoint" ]] ; then   ### From here could be separate function, write_persistence_conf () 
	mkdir "$persist_dev_mountpoint"
fi
mount "$persist_dev" "$persist_dev_mountpoint"
#cp "$persistence_conf_template" /tmp/persist_dev_mountpoint/
if [ "$PERSISTENCE" = "yes" ]; then

echo -e "# home persistence example:"  > ${persist_dev_mountpoint}/persistence.conf
echo -e "# /home bind,source=.\n" >> ${persist_dev_mountpoint}/persistence.conf

echo -e "# full persistence example (entire filesystem writable):"  >> ${persist_dev_mountpoint}/persistence.conf
echo -e "# / union,source=.\n"  >> ${persist_dev_mountpoint}/persistence.conf

	if [ "$PERSISTENCE_TYPE" = "home" ]; then
		echo -e "/home union,source=." >> ${persist_dev_mountpoint}/persistence.conf
	fi

	if [ "$PERSISTENCE_TYPE" = "full" ]; then
		echo -e "/ union,source=." >> ${persist_dev_mountpoint}/persistence.conf
	fi

	if [ "$PERSISTENCE_TYPE" = "config" ]; then
		find_editor
		"$editor" ${editor_option} ${persist_dev_mountpoint}/persistence.conf
	fi
fi

umount "$persist_dev_mountpoint"
rmdir "$persist_dev_mountpoint"

if [[ $persist_label = persistence ]] ; then

	finished_message="
Persistent partition is ready. 
An entry for persistence will be added to your boot menu,
and the menu will be opened in an editor for your review. "
	echo "$finished_message"
else
	finished_message="
Persistent partition is ready and has a
non-standard label. You need the following
option in the append line of your boot menu.

	persistence-label=$persist_label
	
An entry containing that option will be added to your 
boot menu, and the menu will be opened in an editor   
for your review.
"
fi
finished_dialog
}


# check for root
[[ $(id -u) -eq 0 ]] || { exit_message="\nYou need to be root\!" \
exit_dialog ; }


# Exit if this is not running in an xsession.
if ! [[ $DISPLAY ]] ; then
	echo "This program needs to run from within an xsession."
	exit 1
fi


device="$(cat /tmp/r2u_device)"
echo "device is  $device"
partition_gui
sanity_checks
find_editor
prepare_config

if [[ -n "$persist_label" ]] ; then
	if [[ $persist_label = "persistence" ]] ; then
		menu_text="
label persistence
	menu label Refracta (persistence)
    kernel /live/vmlinuz quiet
    append initrd=/live/initrd.img boot=live ip=frommedia union=aufs config=openssh-server persistence 
"
	else
		menu_text="
label $persist_label
	menu label Refracta ($persist_label)
    kernel /live/vmlinuz quiet
    append initrd=/live/initrd.img boot=live ip=frommedia union=aufs persistence persistence-label=$persist_label 
"
	fi
	
	echo "$menu_text" > /tmp/boot_menu_text
#	chmod 666 /tmp/boot_menu_text
	username=$(cat /tmp/r2u_user)
	chown ${username}:${username} /tmp/boot_menu_text
fi

exit 0
