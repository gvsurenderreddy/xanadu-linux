#!/usr/bin/env bash
# 2014-02-21
TITLE="select_loop_unmount"

if [[ $1 = "--debug" ]] ; then
	set -x
fi

username=$(cat /tmp/r2u_user)
error_log="/home/${username}/.refracta2usb/unmount_loop.log"
touch "$error_log"
chown ${username}:${username} "$error_log"
exec 2>"$error_log"

source /usr/lib/refracta2usb/functions_r2u
yad_zenity_compat

device=$(cat /tmp/r2u_device)

LOOP_MOUNTPOINT=$($DIALOG --title="$TITLE" --file-selection --directory --filename="/tmp/*" \
	--text=" Select the mount point of the loop file. 
 (Default is /tmp/\$LOOP_FILENAME)
 " \
	--width=500 --height=400 ${OKBUTTON} ${QUITBUTTON})
	if [[ $? = 1 ]] ; then
		exit 0
	fi
echo "LOOP_MOUNTPOINT is $LOOP_MOUNTPOINT"
	if [[ $LOOP_MOUNTPOINT = /tmp ]] ; then
		warning_message=" No mount point was selected."
		warning_dialog
		exit 1
	fi


LOOP_FILENAME="${LOOP_MOUNTPOINT##*/}"
echo "LOOP_FILENAME is $LOOP_FILENAME"

if [[ $(df -h | grep "$LOOP_MOUNTPOINT" | cut -d" " -f1) =~ "/dev/loop" ]] ; then
	LOOPDEV=$(df -h | grep "$LOOP_MOUNTPOINT" | cut -d" " -f1)
	echo "LOOPDEV is $LOOPDEV"
else
	LOOPDEV=$(cat /tmp/loopdev."$LOOP_FILENAME")
	echo "LOOPDEV is something else"
fi
#	if ! [[ -b $LOOPDEV ]] ; then
#		echo " No dev"
#		warning_message=" No dev."
#		warning_dialog
#		exit 1
#	fi


umount ${LOOP_MOUNTPOINT}
DIR_FILES=$(ls ${LOOP_MOUNTPOINT}|wc -l)
if [ "$DIR_FILES" -ne "0" ]; then
	echo "Error: Mountpoint ${LOOP_MOUNTPOINT} is not empty" && exit 1
else
	rmdir ${LOOP_MOUNTPOINT}
fi

if [[ -e /dev/mapper/${LOOP_FILENAME} ]] ; then
	cryptsetup luksClose ${LOOP_FILENAME}
fi

if [[ -n "$LOOPDEV" ]] ; then
	losetup -d ${LOOPDEV}
fi

if [[ -f /tmp/loopdev."$LOOP_FILENAME" ]] ; then
	rm -f /tmp/loopdev."$LOOP_FILENAME"
fi


# Unmount the partition that holds the loopfile and remove the mountpoint.
$DIALOG --$QUESTION --title=$TITLE --text=" Do you want to unmount the partition that contains the loopfile before exiting. 
 or just quit this task and return to the main menu?" \
--${BUTTON0}="Unmount"${BUTTON0NUM} --${BUTTON1}="Quit"${BUTTON1NUM}
	if [[ $? = 0 ]] ; then
		selected_partition=$(cat /tmp/selected_partition.${LOOP_FILENAME})
			if [[ -z "$selected_partition" ]] ; then
				warning_message="Something is wrong. No partition was selected?"
				warning_dialog
				exit 1
			fi
		error_message="Failed to unmount $selected_partition"
		umount "$selected_partition" ; check_exit
		error_message="Faled to remove /tmp/${selected_partition##*/}"
		rmdir /tmp/${selected_partition##*/} ; check_exit
		rm -f /tmp/selected_partition.${LOOP_FILENAME}
	else
		exit 0
	fi

exit 0
